group 'com.shadowell.cloud'
version '1.0.0'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin-spring'
apply plugin: 'docker'

sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}
compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ["-Xjsr305=strict"]
		jvmTarget = "1.8"
	}
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudDependenciesVersion"
	}

	dependencies {
		dependency "org.springframework.cloud:spring-cloud-starter-eureka:$springCloudComponentsVersion"
		dependency "org.springframework.cloud:spring-cloud-starter-feign:$springCloudComponentsVersion"
		dependency "org.springframework.cloud:spring-cloud-starter-zuul:$springCloudComponentsVersion"
		dependency "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
		dependency "com.oracle:ojdbc6:$ojdbcVersion"
		dependency "mysql:mysql-connector-java:$mysqlVersion"
		dependency "com.springframework.boot:spring-boot-starter-log4j2:$springBootVersion"
		dependency "com.fasterxml.jackson.core:jackson-databind:$fasterxmlVersion"
		dependency "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$fasterxmlVersion"
	}
}
configurations {
	compile.exclude module: 'spring-boot-starter-logging'
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'com.fasterxml.jackson.module:jackson-module-kotlin'
	compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
	compile 'org.jetbrains.kotlin:kotlin-reflect'
	compile 'com.oracle:ojdbc6'
	compile 'mysql:mysql-connector-java'
	compile 'org.springframework.cloud:spring-cloud-starter-eureka'
	compile 'org.springframework.cloud:spring-cloud-starter-feign'
	compile 'org.springframework.cloud:spring-cloud-starter-zuul'
	compile 'org.springframework.boot:spring-boot-starter-log4j2'
	compile 'com.fasterxml.jackson.core:jackson-databind'
	compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

	testCompile 'org.springframework.boot:spring-boot-starter-test'

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

jar {
    baseName 'product-service'
    version '1.0.0'
}

distDocker {
    baseImage 'openjdk'
    maintainer 'shadowell'
}

task dockerBuilder(type: Docker) {
    applicationName = jar.baseName
    tagVersion = jar.version
    volume('/tmp')
    addFile("${jar.baseName}-${jar.version}.jar", "app.jar")
    entryPoint(["java", "-Djava.security.egd=file:/dev/./urandom", "-jar", 'app.jar'])
    exposePort(8401)
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}

// 使用Docker File 构建docker镜像
//task buildDocker(type: Docker) {
//    applicationName = jar.baseName
//    tagVersion = jar.version
//    dockerfile = file('Dockerfile')
//    doFirst {
//        copy {
//            from jar
//            into stageDir
//        }
//    }
//}

//applicationDistribution.from('resources') {
//    into "config/product-service"
//}